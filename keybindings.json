// Place your key bindings in this file to override the defaultsauto[]
[
    // VIM 
    {
        "key": "tab",
        "command": "editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "shift+tab",
        "command": "editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "shift+i",
        "command": "extension.vim_escape",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Normal'"
    },
    // EXPLOERER
    {
        "key": "ctrl+n",
        "command": "explorer.newFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "ctrl+shift+n",
        "command": "explorer.newFolder",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "ctrl+n",
        "command": "csdevkit.addNewFile",
        "args": [
            "solutionExplorer"
        ],
        "when": "focusedView == 'solutionExplorer' && selectedSolutionExplorerNodeType == 'File' || focusedView == 'solutionExplorer' && selectedSolutionExplorerNodeType == 'Folder'"
    },
    {
        "key": "ctrl+shift+n",
        "command": "explorer.newFolder",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    // GENERAL
    {
        "key": "ctrl+e",
        "command": "workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "ctrl+e",
        "command": "workbench.action.focusNextGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+b",
        "command": "workbench.view.explorer"
    },
    {
        "key": "ctrl+t",
        "command": "terminal.focus"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.view.scm"
    },
    {
        "key": "ctrl+d",
        "command": "workbench.view.debug"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "ctrl+o",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "alt+j",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+k",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+j",
        "command": "multiCommand.pageDownAndCenter",
        "when": "editorTextFocus  && !codeActionMenuVisible"
    },
    {
        "key": "shift+k",
        "command": "multiCommand.pageUpAndCenter",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+j",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "shift+k",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "ctrl+pageup",
        "command": "-workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "ctrl+pageup",
        "command": "-workbench.action.debug.prevConsole",
        "when": "inDebugRepl"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.debug.nextConsole",
        "when": "inDebugRepl"
    },
    {
        "key": "shift+n",
        "command": "workbench.action.terminal.new",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+oem_3",
        "command": "-workbench.action.terminal.new",
        "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    {
        "key": "shift+d",
       "command": "workbench.action.terminal.kill",
        "when": "terminalFocus"
    },
                             /*
    {
        "key": "ctrl+j",
        "command": "workbench.action.showAllEditors",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.showAllEditors",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenNavigatePreviousInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
                             */
    {
        "key": "shift+c",
        "command": "list.collapseAll",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+left",
        "command": "-list.collapseAll",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "shift+d",
        "command": "git.cleanAll",
        "when": "view.workbench.scm.visible && workbench.scm.active && !terminalFocus"
    },
    {
        "key": "shift+a",
        "command": "git.stageChange"
    },
    {
        "key": "shift+a",
        "command": "git.stage",
        "when": "isInDiffEditor && vim.active && !inDebugRepl && !operationInProgress && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+shift+t",
        "command": "workbench.view.testing.focus"
    },
    {
        "key": "shift+c",
        "command": "editor.toggleFold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+l",
        "command": "-editor.toggleFold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+oem_5",
        "command": "-workbench.action.splitEditorRight"
    },
    {
        "key": "shift+l",
        "command": "workbench.action.navigateForward",
        "when": "canNavigateForward"
    },
    {
        "key": "alt+right",
        "command": "-workbench.action.navigateForward",
        "when": "canNavigateForward"
    },
    {
        "key": "shift+h",
        "command": "workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "alt+left",
        "command": "-workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "shift+a",
        "command": "git.stageSelectedRanges",
        "when": "isInDiffEditor && !operationInProgress && vim.active && !inDebugRepl && vim.mode != 'Normal'"
    },
    {
        "key": "ctrl+k ctrl+alt+s",
        "command": "-git.stageSelectedRanges",
        "when": "isInDiffEditor && !operationInProgress"
    },
    {
        "key": "shift+u",
        "command": "git.unstageSelectedRanges",
        "when": "isInDiffEditor && !operationInProgress && vim.active && !inDebugRepl && vim.mode != 'Normal'"
    },
    {
        "key": "ctrl+k ctrl+n",
        "command": "-git.unstageSelectedRanges",
        "when": "isInDiffEditor && !operationInProgress"
    },
    {
        "key": "shift+u",
        "command": "git.unstage",
        "when": "isInDiffEditor && !operationInProgress && vim.active && !inDebugRepl && vim.mode == 'Normal'"
    },
    {
        "key": "shift+r",
        "command": "git.revertSelectedRanges",
        "when": "isInDiffEditor && !operationInProgress"
    },
    {
        "key": "ctrl+k ctrl+r",
        "command": "-git.revertSelectedRanges",
        "when": "isInDiffEditor && !operationInProgress"
    },
    {
        "key": "shift+d",
        "command": "git.clean",
        "when": "isInDiffEditor && !operationInProgress"
    },
    {
        "key": "ctrl+f",
        "command": "workbench.action.findInFiles",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.action.findInFiles"
    },
    {
        "key": "ctrl+space",
        "command": "search.action.focusNextSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "f4",
        "command": "-search.action.focusNextSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "shift+space",
        "command": "search.action.focusPreviousSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "shift+f4",
        "command": "-search.action.focusPreviousSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "shift+l",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "alt+f5",
        "command": "-workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "shift+h",
        "command": "workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "shift+alt+f5",
        "command": "-workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "ctrl+k ctrl+l",
        "command": "workbench.action.moveActiveEditorGroupRight",
        "when": "editorGroupIndex < groupCount - 1 && groupCount > 1"
    },
    {
        "key": "ctrl+k right",
        "command": "-workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "ctrl+k ctrl+l",
        "command": "workbench.action.splitEditorRight"
    },
    {
        "key": "ctrl+k ctrl+l",
        "command": "workbench.action.moveEditorToNextGroup",
        "when": "!activeEditorGroupLast"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+k ctrl+h",
        "command": "workbench.action.splitEditorLeft"
    },
    {
        "key": "ctrl+k ctrl+\\",
        "command": "-workbench.action.splitEditorLeft"
    },
    {
        "key": "ctrl+k ctrl+h",
        "command": "workbench.action.moveEditorToLeftGroup"
    },
    {
        "key": "ctrl+alt+k ctrl+alt+h",
        "command": "workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "ctrl+k left",
        "command": "-workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "ctrl+alt+k ctrl+alt+l",
        "command": "workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "ctrl+k ctrl+h",
        "command": "workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "ctrl+alt+left",
        "command": "-workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "shift+c",
        "command": "workbench.debug.action.focusRepl",
        "when": "panelFocus"
    },
    {
        "key": "shift+o",
        "command": "workbench.panel.output.focus",
        "when": "panelFocus"
    },
    {
        "key": "shift+p",
        "command": "workbench.action.problems.focus",
        "when": "panelFocus"
    },
    {
        "key": "shift+r",
        "command": "workbench.panel.testResults.view.focus",
        "when": "panelFocus"
    },
    {
        "key": "down",
        "command": "-selectNextCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "shift+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion && !codeActionMenuVisible"
    },
    {
        "key": "down",
        "command": "-selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "up",
        "command": "-selectPrevCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "shift+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "up",
        "command": "-selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "shift+p",
        "command": "editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "ctrl+shift+space",
        "command": "-editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "shift+s",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+i",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+down",
        "command": "-selectNextCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "ctrl+down",
        "command": "-selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+down",
        "command": "-extension.vim_ctrl+down",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "shift+j",
        "command": "showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible && !codeActionMenuVisible"
    },
    {
        "key": "down",
        "command": "-showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "shift+k",
        "command": "showPrevParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "up",
        "command": "-showPrevParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "shift+p",
        "command": "closeParameterHints",
        "when": "editorFocus && parameterHintsVisible"
    },
    {
        "key": "shift+escape",
        "command": "-closeParameterHints",
        "when": "editorFocus && parameterHintsVisible"
    },
    {
        "key": "alt+down",
        "command": "-showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "alt+up",
        "command": "-showPrevParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "shift+s",
        "command": "hideSuggestWidget",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "shift+escape",
        "command": "-hideSuggestWidget",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+up",
        "command": "-selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+up",
        "command": "-selectPrevCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "shift+f",
        "command": "editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+f",
        "command": "-editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+.",
        "command": "-acceptSelectedCodeAction",
        "when": "codeActionMenuVisible"
    },
   {
        "key": "ctrl+.",
        "command": "hideCodeActionWidget",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "shift+escape",
        "command": "-hideCodeActionWidget",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "ctrl+j",
        "command": "selectNextCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "shift+.",
        "command": "editor.action.wordHighlight.next",
        "when": "editorTextFocus && !textInputFocus && hasWordHighlights"
    },
    {
        "key": "f7",
        "command": "-editor.action.wordHighlight.next",
        "when": "editorTextFocus && hasWordHighlights"
    },
    {
        "key": "shift+,",
        "command": "editor.action.wordHighlight.prev",
        "when": "editorTextFocus && !textInputFocus && hasWordHighlights"
    },
    {
        "key": "shift+f7",
        "command": "-editor.action.wordHighlight.prev",
        "when": "editorTextFocus && hasWordHighlights"
    },
    {
        "key": "ctrl+e",
        "command": "togglePeekWidgetFocus",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
    },
    {
        "key": "ctrl+k f2",
        "command": "-togglePeekWidgetFocus",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
    }
]
